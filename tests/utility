#iFile
iFile 001	[@iFile(test.txt)]															[hello world]

# iEval from builderTests
iEvalInt		@iEval({|@iEq(A,B,T,F)|})										F
Evalbasic		@iEval({|=@a({X})=|})											=[X]=


# iNull
iNull 001		[@iNull(A,X)]													[]
iNull 002		[@iNull(@iEval({|@iSet(foo,bar)@b=rok()|}))@iGet(foo)]			[bar]

# iExpr
iExpr 001		@iExpr(p1*p2+(p1-p2),4.0,5.5)									20.5
iExpr 002		@iExpr(floor(p1*p2+(p1-p2)),4.0,5.5)							20
iExpr 003		@iExpr(round(p1*p2+(p1-p2)),4.0,5.5)							21
//iExpr 00x		@iExpr("p1*p2+(p1-p2)",4.0,5.5)									20.5 //good error message.

# iField
iField 001		@iField(field)													@iField(field)
iField 002		⌽iField(field)													⌽iField(field)
//iField 003	@iField(fi-eld)													⌽iField(field) //good error message.

# iForQuery
//First one needs to be run once (for persistence to store the value)
iForQuery 001	@iSet(BX,Me)@iForQuery(select name from bldvar where value='Me',[@iField(name)])	[BX]
iForQuery 002	@iForQuery(SELECT DATABASE() as db,[@iField(db)])				[duffy]

# iForSubs
iForSubs ini	[@iSet(foo,@iID(!simple))@iSet(bar,@iID(!simple))]				[]
iForSubs 001	@iForSubs(bldvar,@iID(!simple),value,name,[@iField(name)])		[bar][foo]

!iForIndex
//!iConsole

